<?php

/**
 * cafe store api
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * this is a sample.
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 * Extend this class with your controller. You can inject dependencies via class constructor,
 * @see https://github.com/PHP-DI/Slim-Bridge basic example.
 */
namespace OpenAPIServer\Api;

use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Message\ResponseInterface;
use Slim\Exception\HttpNotImplementedException;

/**
 * AbstractOrderApi Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
abstract class AbstractOrderApi
{
    /**
     * POST addOrder
     * Summary: add order
     * Notes: オーダー作成
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function addOrder(
        ServerRequestInterface $request,
        ResponseInterface $response
    ): ResponseInterface {
        $body = $request->getParsedBody();
        $message = "How about implementing addOrder as a POST method in OpenAPIServer\Api\OrderApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * DELETE deleteOrder
     * Summary: 
     * Notes: オーダー削除
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string $orderID オーダーID
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function deleteOrder(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $orderID
    ): ResponseInterface {
        $message = "How about implementing deleteOrder as a DELETE method in OpenAPIServer\Api\OrderApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET listOrder
     * Summary: list order
     * Notes: オーダー一覧
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function listOrder(
        ServerRequestInterface $request,
        ResponseInterface $response
    ): ResponseInterface {
        $message = "How about implementing listOrder as a GET method in OpenAPIServer\Api\OrderApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET showOrder
     * Summary: show order
     * Notes: オーダー詳細
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string $orderID オーダーID
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function showOrder(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $orderID
    ): ResponseInterface {
        $message = "How about implementing showOrder as a GET method in OpenAPIServer\Api\OrderApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * PUT updateOrder
     * Summary: 
     * Notes: オーダー更新
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string $orderID オーダーID
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function updateOrder(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $orderID
    ): ResponseInterface {
        $body = $request->getParsedBody();
        $message = "How about implementing updateOrder as a PUT method in OpenAPIServer\Api\OrderApi class?";
        throw new HttpNotImplementedException($request, $message);
    }
}
